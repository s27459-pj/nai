"""
This type stub file was generated by pyright.
"""

class DictTranspositionTable:
    """
    A DictTranspositionTable implements custom dictionary,
    which can be used with transposition tables.
    """
    def __init__(self, num_buckets=..., own_hash=...) -> None:
        """
        Initializes a dictionary with the given number of buckets.
        """
        ...
    
    def hash_key(self, key): # -> int:
        """
        Given a key this will create a number and then convert it to
        an index for the dict.
        """
        ...
    
    def get_slot(self, key, default=...): # -> tuple[int | Any, Any, Any] | tuple[Literal[-1], Any, Any | None]:
        """
        Returns the index, key, and value of a slot found in the dict.
        Returns -1, key, and default (None if not set) when not found.
        """
        ...
    
    def get(self, key, default=...): # -> None:
        """
        Gets the value for the given key, or the default.
        """
        ...
    
    def set(self, key, value): # -> None:
        """
        Sets the key to the value, replacing any existing value.
        """
        ...
    
    def delete(self, key): # -> None:
        """
        Deletes the given key from the dictionary.
        """
        ...
    
    def collisions(self): # -> int:
        ...
    
    def __getitem__(self, key): # -> None:
        ...
    
    def __missing__(self, key): # -> None:
        ...
    
    def __setitem__(self, key, value): # -> None:
        ...
    
    def __delitem__(self, key): # -> None:
        ...
    
    def __iter__(self): # -> Iterator[Any]:
        ...
    
    def __contains__(self, key): # -> bool:
        ...
    


